pipeline {
    agent any

    stages {
        // 1. Git 저장소에서 코드 클론
        stage('Clone repository') {
            steps {
                git url: 'https://github.com/20211129/Faniverse-DevOps.git', branch: 'main'
            }
        }

        // 2. Docker 이미지 빌드 및 실행
        stage('Build image') {
            steps {
                // Docker 이미지를 실행하고, 컨테이너를 시작하는 명령어
                sh 'docker build -t faniverse_backend:latest .'
                sh 'docker run -d --name fan-container -p 8080:8080 faniverse_backend:latest'
            }
        }

        // 3. Docker 이미지에서 테스트 실행 (예시로 컨테이너의 상태를 확인하는 명령어를 사용)
        stage('Test image') {
            steps {
                // 예시: 컨테이너가 실행 중인지 확인
                sh 'docker ps -a'
            }
        }

        // 4. Docker 이미지를 Docker Hub 또는 다른 레지스트리로 푸시
        stage('Push image') {
            steps {
                script {
                    // Docker Hub 레지스트리로 푸시
                    docker.withRegistry('https://registry.hub.docker.com', 'yr20211129') {
                        // 이미지 푸시
                        sh 'docker tag faniverse_backend:latest yr20211129/faniverse_backend:latest'
                        sh 'docker push yr20211129/faniverse_backend:latest'
                    }
                }
            }
        }
    }
}
